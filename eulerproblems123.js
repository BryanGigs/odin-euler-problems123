 
/* --------------------------------------------------------------------------
	Euler Problem 1 - Source: https://projecteuler.net/problem=1

	Multiples of 3 and 5

	If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.
---------------------------------------------------------------------------*/

var sumOfThreeOrFive = 0;

for (var index = 0; index <= 1000; index++) {
 	if ((index % 3) === 0) {
 		sumOfThreeOrFive = sumOfThreeOrFive + index;
 	}
 	else if ((index % 5) === 0) {
 		sumOfThreeOrFive  = sumOfThreeOrFive + index;
 	}
 	if ((index % 100) === 0)
 		console.log(sumOfThreeOrFive);		
}

console.log(sumOfThreeOrFive);


/* --------------------------------------------------------------------------
	Euler Problem 2 - Source: https://projecteuler.net/problem=2

	Even Fibonacci numbers

	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
---------------------------------------------------------------------------*/

var sumOfEvenFibs = 0;
var currentFib = 2;
var previousFib = 1;

while (currentFib <= 4000000) {
	if (currentFib % 2 === 0) {
		sumOfEvenFibs = sumOfEvenFibs + currentFib;
		console.log(currentFib);
	}
	var nextCurrentFib = currentFib + previousFib;
	previousFib = currentFib;
	currentFib = nextCurrentFib;
}

console.log(currentFib);
console.log(sumOfEvenFibs);

/* --------------------------------------------------------------------------
	Euler Problem 3 - Source: https://projecteuler.net/problem=3

	Largest prime factor

	The prime factors of 13195 are 5, 7, 13 and 29.
	What is the largest prime factor of the number 600851475143 ?
---------------------------------------------------------------------------*/

// Fine prime numbers below target 600851475143

var primeArrayKnown = [1,2,3,5,7,11];

var primeArray = [];

var findFactors = function(numTested) {
	var factorArray = [1];
	var maxRoot = Math.round(Math.sqrt(numTested));
	for (var index = 2; index <= maxRoot; index++) {
		if (numTested % index === 0) {
			factorArray.push(index);
		}
	}
	return factorArray;
}

console.log(findFactors(13195))

var findPrimeFactors = function(factorArray) {
	var primeArray = [];
	for (var index = 0; index < factorArray.length; index++) {
		var testArray = findFactors(factorArray[index]);
		if (testArray.length === 1) {
			primeArray.push(factorArray[index]);
		}
	}
	return primeArray;	
}

console.log(findPrimeFactors(findFactors(13195)));

console.log(findFactors(600851475143));

console.log(findPrimeFactors(findFactors(600851475143)));
